[versions]
kotlin = "1.7.20" # See: https://kotlinlang.org/docs/releases.html#release-details
coroutines = "1.6.4"
ktor = "2.1.3" # See: https://maven.pkg.jetbrains.space/public/p/ktor/eap/io/ktor/ktor/

# Build
build-buildkonfig = "0.12.0"
# Nominate the version of the Android Gradle Plugin best suited to the IDE being used (if any)
# Maintain this with values from: https://developer.android.com/reference/tools/gradle-api
build-androidgradleplugin = "7.2.2"

build-serializationplugin = "1.7.20"
build-versions = "0.42.0"
build-updates = "0.4.0"
build-kover = "0.5.1"

serialization-runtime = "1.4.1"

# Common
common-mokoresources = "0.20.0"
common-datetime = "0.3.2"
common-settings = "0.9"
common-commonmark = "0.18.2"

# Android
android-appcompat = "1.4.1"
android-kotlinextensions = "1.7.20"
android-camera = "1.0.2"
android-cameraview = "1.0.0-alpha28"
android-cameralifecycle = "1.0.2"
android-window = "1.0.0"
android-materialdesign = "1.6.0"
android-lifecycleruntime = "2.4.1"
android-activitycompose = "1.4.0"
android-barcodescanning = "17.0.2"
android-playservices = "20.2.0"

logback = "1.2.11"


test-junit = "4.13.2"
test-androidjunit = "1.1.3"
test-espresso = "3.4.0"
test-turbine = "0.8.0"
test-truth = "1.1.3"

test.androidx.compose.junit4 = "1.1.0" # todo reference to compose?

# Compose
# For new [jetbrains compose](https://github.com/jetbrains/compose-jb) builds see:
# - [artifact repository](https://maven.pkg.jetbrains.space/public/p/compose/dev/org/jetbrains/compose/ui/ui/)
# - [github tags](https://github.com/jetbrains/compose-jb/tags)
compose-jetbrainsmultiplatform = "1.2.1"

# See [google maven repository](https://maven.google.com/web/index.html#androidx.compose.ui:ui) for releases.
compose-googleandroid = "1.2.1"

[libraries]

# Build
build-kotlingradleplugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
build-androidgradleplugin = { module = "com.android.tools.build:gradle", version.ref = "build-androidgradleplugin" }

# Coroutines - https://github.com/kotlin/kotlinx.coroutines
coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
# In case jvm needs to be specified e.g. in an intermediary source-set
coroutines-corejvm = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core-jvm", version.ref = "coroutines" }
coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines" }

# Ktor - https://ktor.io

ktor-serialization = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }

## Client - https://ktor.io/docs/client.html
ktor-client-contentnegotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-auth = { module = "io.ktor:ktor-client-auth", version.ref = "ktor" }
ktor-client-java = { module = "io.ktor:ktor-client-java", version.ref = "ktor" }
ktor-client-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-client-js = { module = "io.ktor:ktor-client-js", version.ref = "ktor" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
### Platform Engines
ktor-client-android = { module = "io.ktor:ktor-client-android", version.ref = "ktor" }
ktor-client-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }

# Test {

## Kotlin

test-kotlin-assertionscommon = { module = "org.jetbrains.kotlin:kotlin-test-common", version.ref = "kotlin" } # assertions for use in common code;
test-kotlin-annotationscommon = { module = "org.jetbrains.kotlin:kotlin-test-annotations-common", version.ref = "kotlin" } # test annotations for use in common code;
test-kotlin-assertionsjvm = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" } # a jvm implementation of assertions from kotlin-test-common;
test-kotlin-junit = { module = "org.jetbrains.kotlin:kotlin-test-junit", version.ref = "kotlin" } # provides an implementation of asserter on top of junit and maps the test annotations from kotlin-test-annotations-common to junit test annotations;

test-kotlin-js = { module = "org.jetbrains.kotlin:kotlin-test-js", version.ref = "kotlin" } # a js implementation of common test assertions and annotations with the out-of-

test-coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }
test-turbine = { module = "app.cash.turbine:turbine", version.ref = "test-turbine" } # https://github.com/cashapp/turbine

## truth - https://github.com/google/truth

test-truth-core = { module = "com.google.truth:truth", version.ref = "test-truth" }
test-truth-jdk8extensions = { module = "com.google.truth.extensions:truth-java8-extension", version.ref = "test-truth" }

## settings - https://github.com/russhwolf/multiplatform-settings
common-settings-core = { module = "com.russhwolf:multiplatform-settings", version.ref = "common-settings" }
common-settings-noarg = { module = "com.russhwolf:multiplatform-settings-no-arg", version.ref = "common-settings" }

## serialziation - https://github.com/kotlin/kotlinx.serialization
common-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "serialization.runtime" }


# android
android-appcompat = { module = "androidx.appcompat:appcompat", version.ref = "android-appcompat" }
android-kotlinextensions = { module = "androidx.core:core-ktx", version.ref = "android-kotlinextensions" }
android-camera = { module = "androidx.camera:camera-camera2", version.ref = "android-camera" } # https://developer.android.com/reference/android/hardware/camera2/package-summary
android-cameraview = { module = "androidx.camera:camera-view", version.ref = "android-cameraview" }
android-cameralifecycle = { module = "androidx.camera:camera-lifecycle", version.ref = "android-cameralifecycle" }
android-window = { module = "androidx.window:window", version.ref = "android-window" }
android-materialdesign = { module = "com.google.android.material:material", version.ref = "android-materialdesign" }
android-lifecycleruntime = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "android-lifecycleruntime" }
android-lifecycleviewmodelsavedstate = { module = "androidx.lifecycle:lifecycle-viewmodel-savedstate", version.ref = "android-lifecycleruntime" }
android-activitycompose = { module = "androidx.activity:activity-compose", version.ref = "android-activitycompose" }
android-barcodescanning = { module = "com.google.mlkit:barcode-scanning", version.ref = "android-barcodescanning" } # https://developers.google.com/ml-kit/vision/barcode-scanning

# Compose - https://developer.android.com/jetpack/compose/

## Android
compose-android-uitooling-core = { module = "androidx.compose.ui:ui-tooling", version.ref = "compose-googleandroid" }
compose-android-uitooling-preview = { module = "androidx.compose.ui:ui-tooling-preview", version.ref = "compose-googleandroid" }


openfoodfacts-kotlin = "openfoodfacts.github.scrachx.openfood.api.client:openfoodfacts-kotlin:1.0-SNAPSHOT"

[bundles]

# Multiplatform Settings bundle with no-arg contructor, for clients
common-settings = [
    "common-settings-core",
    "common-settings-noarg"
]

ktor-client = [
    "ktor-client-core",
    "ktor-client-auth",
    "ktor-client-contentnegotiation"
]

test-truth = [
    "test-truth-core",
    "test-truth-jdk8extensions"
]

[plugins]

# Kotlin
kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "build-serializationplugin" }
versions = { id = "com.github.ben-manes.versions", version.ref = "build-versions" }
updates = { id = "nl.littlerobots.version-catalog-update", version.ref = "build-updates" }
kover = { id = "org.jetbrains.kotlinx.kover", version.ref = "build-kover" }
compose = { id = "org.jetbrains.compose", version.ref = "compose-jetbrainsmultiplatform" }
